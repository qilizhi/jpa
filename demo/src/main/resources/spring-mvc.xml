<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
      http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
      ">

	<!-- 自动读取。适配文件 用于 注解决加载 配置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:log4j.properties</value>
				<value>classpath:conf.properties</value>
				<!-- 可以适当增加个数据库 -->
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJackson2HttpMessageConverter" 
		/> </list> </property> </bean> -->
	<!-- 扫描文件（自动将servicec层注入） -->
	<!-- <context:component-scan base-package="com.mlx.guide.util,com.mlx.guide.service" 
		/> -->
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.qlz.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<!-- 自动扫描@Service(防止事务失效) -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 日期 转换服务 -->
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="com.qlz.util.DateFormatter"></bean>
			</set>
		</property>
		<!-- <property name="converters"> <list> <bean class="cn.javass.chapter7.web.controller.support. 
			converter.StringToDateConverter"> <constructor-arg value="yyyy-MM-dd"/> </bean> 
			</list> </property> -->


	</bean>
	<!-- http响应转换 start -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
				<!-- <value>text/html;charset=UTF-8</value> -->
			</list>
		</property>
		<property name="objectMapper">
			<bean class="com.qlz.util.JsonObjectMapper">
				<!-- 设置时间格式 -->
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
					</bean>
				</property>
			</bean>
		</property>
		<!-- 过滤转成JSON格式时的Null -->
		<!-- <property name="objectMapper"> <bean class="com.fasterxml.jackson.databind.ObjectMapper"> 
			<property name="serializationInclusion"> <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_EMPTY</value> 
			</property> 设置时间格式 <property name="dateFormat"> <bean class="java.text.SimpleDateFormat"> 
			<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" /> </bean> 
			</property> </bean> </property> -->
	</bean>
	<!-- http响应转换 end -->

	<!-- 开启spring data 的支持 -->
	<!-- <bean class="org.springframework.data.web.config.SpringDataWebConfiguration" 
		/> -->
	<!-- <bean class="org.springframework.data.repository.support.DomainClassConverter"> 
		<constructor-arg ref="conversion-service" /> </bean> -->

	<mvc:annotation-driven conversion-service="conversion-service">
		<mvc:message-converters register-defaults="true">
			<ref bean="mappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
		<mvc:argument-resolvers>
			<!-- spring pagable 分页插件 resolvers -->
			<bean
				class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
				<!-- 设置最大的分页大小，超过则以最大值为准 -->
				<!-- <property name="maxPageSize" value="30"></property> -->
				<!-- 首页从1开始 -->
				<!-- <property name="oneIndexedParameters" value="true"></property> -->
				<!-- 重写页的命名 -->
				<!-- <property name="pageParameterName" value="pageNo"></property> -->
				<!-- 重写页大小的命名 -->
				<!-- <property name="sizeParameterName" value="pageSize"></property> -->

			</bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<mvc:view-controller path="/" view-name="redirect:/admin" />

	<!-- 将Controller抛出的异常转到特定View -->
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Throwable">error/500</prop> 
		</props> </property> </bean> -->
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/jsp" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 文件 上传 的相关限制 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>

	<!-- <bean id="springContextHolder" class="com.mlx.guide.util.SpringContextHolder" 
		lazy-init="false" /> -->


</beans>